import tkinter as tk
from tkinter import messagebox, simpledialog

# Contact list (in-memory storage)
contacts = []

# Functions
def add_contact():
    name = name_entry.get().strip()
    phone = phone_entry.get().strip()
    email = email_entry.get().strip()
    address = address_entry.get().strip()

    if not name or not phone:
        messagebox.showerror("Error", "Name and Phone are required!")
        return

    contacts.append({"name": name, "phone": phone, "email": email, "address": address})
    messagebox.showinfo("Success", "Contact added successfully!")
    clear_entries()
    view_contacts()

def view_contacts():
    listbox.delete(0, tk.END)
    for idx, contact in enumerate(contacts, start=1):
        listbox.insert(tk.END, f"{idx}. {contact['name']} - {contact['phone']}")

def search_contact():
    query = search_entry.get().strip().lower()
    listbox.delete(0, tk.END)
    for idx, contact in enumerate(contacts, start=1):
        if query in contact['name'].lower() or query in contact['phone']:
            listbox.insert(tk.END, f"{idx}. {contact['name']} - {contact['phone']}")

def update_contact():
    try:
        selection = listbox.curselection()[0]
        index = int(listbox.get(selection).split(".")[0]) - 1
    except IndexError:
        messagebox.showerror("Error", "Please select a contact to update.")
        return

    contact = contacts[index]
    name = simpledialog.askstring("Update Name", "Enter new name:", initialvalue=contact["name"])
    phone = simpledialog.askstring("Update Phone", "Enter new phone:", initialvalue=contact["phone"])
    email = simpledialog.askstring("Update Email", "Enter new email:", initialvalue=contact["email"])
    address = simpledialog.askstring("Update Address", "Enter new address:", initialvalue=contact["address"])

    if name and phone:
        contacts[index] = {"name": name, "phone": phone, "email": email, "address": address}
        messagebox.showinfo("Success", "Contact updated successfully!")
        view_contacts()
    else:
        messagebox.showerror("Error", "Name and Phone are required!")

def delete_contact():
    try:
        selection = listbox.curselection()[0]
        index = int(listbox.get(selection).split(".")[0]) - 1
    except IndexError:
        messagebox.showerror("Error", "Please select a contact to delete.")
        return

    confirm = messagebox.askyesno("Delete", "Are you sure you want to delete this contact?")
    if confirm:
        contacts.pop(index)
        messagebox.showinfo("Deleted", "Contact deleted successfully!")
        view_contacts()

def clear_entries():
    name_entry.delete(0, tk.END)
    phone_entry.delete(0, tk.END)
    email_entry.delete(0, tk.END)
    address_entry.delete(0, tk.END)

# GUI setup
root = tk.Tk()
root.title("Contact Manager")
root.geometry("500x500")
root.config(bg="#f0f0f0")

# Input fields
tk.Label(root, text="Name:", bg="#f0f0f0").pack()
name_entry = tk.Entry(root, width=40)
name_entry.pack()

tk.Label(root, text="Phone:", bg="#f0f0f0").pack()
phone_entry = tk.Entry(root, width=40)
phone_entry.pack()

tk.Label(root, text="Email:", bg="#f0f0f0").pack()
email_entry = tk.Entry(root, width=40)
email_entry.pack()

tk.Label(root, text="Address:", bg="#f0f0f0").pack()
address_entry = tk.Entry(root, width=40)
address_entry.pack()

tk.Button(root, text="Add Contact", command=add_contact, bg="green", fg="white").pack(pady=5)

# Search
tk.Label(root, text="Search:", bg="#f0f0f0").pack()
search_entry = tk.Entry(root, width=30)
search_entry.pack()
tk.Button(root, text="Search", command=search_contact).pack(pady=5)

# Contact list
listbox = tk.Listbox(root, width=50, height=10)
listbox.pack(pady=10)

# Buttons
tk.Button(root, text="View All Contacts", command=view_contacts).pack(pady=5)
tk.Button(root, text="Update Contact", command=update_contact, bg="orange").pack(pady=5)
tk.Button(root, text="Delete Contact", command=delete_contact, bg="red", fg="white").pack(pady=5)
tk.Button(root, text="Exit", command=root.destroy).pack(pady=5)

root.mainloop()
